{"version":3,"sources":["./src/environments/environment.ts","./src/app/visualizer/models/algorithms/pathfinding/dijkstrasAlghorithm.ts","./src/app/visualizer/components/board/board.component.ts","./src/app/visualizer/components/board/board.component.html","./src/app/visualizer/models/utility/UtilityFunctions.ts","./src/app/visualizer/models/board.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/visualizer/models/utility/PriorityQueue.ts","./src/app/visualizer/visualizer.component.ts","./src/app/visualizer/visualizer.component.html","./src/app/visualizer/models/node.ts","./src/app/visualizer/components/board/board.animations.ts","./src/app/visualizer/visualizer.module.ts","./src/app/visualizer/models/algorithms/pathfinding/AStar.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Board } from \"../../board\";\r\nimport { Node } from \"../../node\";\r\nimport { UtilityFunctions } from \"../../utility/UtilityFunctions\";\r\n\r\nexport class DijkstrasAlgorithm {\r\n\r\n    private static NO_PARENT: number = -1;\r\n\r\n    public static async calculatePath(board: Board, delay: number): Promise<any> {\r\n\r\n        let sourceIndex = board.getNodeList().indexOf(board.getInitalNode());\r\n        let targetIndex = board.getNodeList().indexOf(board.getDestinationNode());\r\n        let nodes = board.getNodeList();\r\n        let shortestDistances: number[] = new Array(nodes.length);\r\n        let checked: boolean[] = new Array(nodes.length);\r\n        \r\n        for (let i = 0; i < nodes.length; i++) {\r\n            shortestDistances[i] = Number.POSITIVE_INFINITY;\r\n            checked[i] = false;\r\n        }\r\n\r\n        shortestDistances[sourceIndex] = 0;\r\n\r\n        let parents: number[] = new Array(nodes.length);\r\n        parents[sourceIndex] = DijkstrasAlgorithm.NO_PARENT;\r\n        \r\n\r\n        for (let i = 0; i < nodes.length; i++) {\r\n            let nearestNodeIndex: number = -1;\r\n            let shortestDistance: number = Number.POSITIVE_INFINITY;\r\n            \r\n            for (let i = 0; i < nodes.length; i++) {\r\n                if(!checked[i] && shortestDistances[i] < shortestDistance) {\r\n                    shortestDistance = shortestDistances[i];\r\n                    nearestNodeIndex = i;\r\n                }\r\n            }\r\n\r\n            checked[nearestNodeIndex] = true;\r\n            if (delay == 0)\r\n                nodes[nearestNodeIndex].type = 'checked'\r\n            else\r\n                await DijkstrasAlgorithm.checkNode(nodes[nearestNodeIndex], delay);\r\n\r\n            if (nearestNodeIndex == targetIndex) {\r\n                if (delay == 0) {\r\n                    DijkstrasAlgorithm.setPath(nodes, sourceIndex, targetIndex, parents, delay);\r\n                    return  new Promise(resolve => resolve(shortestDistances[targetIndex]));\r\n                }\r\n                else \r\n                {\r\n                    await DijkstrasAlgorithm.setPath(nodes, sourceIndex, targetIndex, parents, delay*8);\r\n                    return new Promise(resolve => resolve(shortestDistances[targetIndex]));\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < nodes.length; i++) {\r\n                let edgeWeight: number = board.getEdgeWeight(nodes[nearestNodeIndex], nodes[i]);\r\n\r\n                if (edgeWeight > 0 && ((shortestDistance + edgeWeight) < shortestDistances[i])) {\r\n                    parents[i] = nearestNodeIndex;\r\n                    shortestDistances[i] = shortestDistance + edgeWeight;\r\n                }\r\n            }\r\n        }\r\n\r\n        return new Promise(resolve => resolve(0));\r\n    }\r\n\r\n    private static async setPath(nodes: Node[], sourceIndex: number, targetIndex: number, parents: number[], delay: number): Promise<Node[]> {\r\n        let list: Node[] = new Array();\r\n        let newIndex = targetIndex;\r\n        while(parents[newIndex] != DijkstrasAlgorithm.NO_PARENT) {\r\n            list.push(nodes[newIndex]);\r\n            \r\n            newIndex = parents[newIndex];\r\n        }\r\n\r\n        list.push(nodes[sourceIndex]);\r\n        list = list.reverse();\r\n        if (delay == 0) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                list[i].type = 'path';\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < list.length; i++) {\r\n                const result = await UtilityFunctions.resolveWait(delay);\r\n                if (result == 'resolved')\r\n                    list[i].type = 'path';\r\n            }\r\n        }\r\n\r\n        return await list;\r\n    }\r\n\r\n    private static async checkNode(node: Node, delay: number) {\r\n        return new Promise(async resolve => {\r\n            const result = await UtilityFunctions.resolveWait(delay);\r\n            if (result == 'resolved')\r\n                node.type = 'checked';\r\n                resolve('resolved')\r\n        });\r\n    }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\nimport { AStar } from '../../models/algorithms/pathfinding/AStar';\nimport { DijkstrasAlgorithm } from '../../models/algorithms/pathfinding/dijkstrasAlghorithm';\nimport { Board } from '../../models/board';\nimport { Node } from '../../models/node';\nimport { BoardAnimations } from './board.animations';\n\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.scss'],\n  animations: [BoardAnimations.nodeType]\n})\nexport class BoardComponent implements OnInit {\n  board = new Board(40, 17);\n\n  algorithms: string[] = new Array(\"Dijsktra's algorithm\", \"A* algorithm\");\n  activeAlgorithm: number = 0;\n  algorithmsListShowed: boolean = false; \n  dragActive: 'false' | 'initial' | 'destination' | 'clear' | 'block' = 'false';\n  calculating: boolean = false;\n  pathCalculated: boolean = false;\n  animationsDisabled: boolean = false;\n  algorithmDelay: number = 1;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  visualize(delay: number): void {\n    if (this.calculating) return;\n    \n    if (this.pathCalculated)\n      this.board.clearPath();\n    \n    this.calculating = true;\n\n    if (delay != 0)\n      this.animationsDisabled = false;\n\n    let result;\n    switch(this.activeAlgorithm) {\n      case 0: result = DijkstrasAlgorithm.calculatePath(this.board, delay); break;\n      case 1: result = AStar.calculatePath(this.board, delay); break;\n      default: result = new Promise(resolve => resolve('done')); break;\n    }\n    result.then(value => {\n      this.calculating = false\n      this.pathCalculated = true;\n      this.animationsDisabled = true;\n      console.log(this.calculating)\n    });\n  }\n\n  clearBoard() {\n    if (this.calculating) return;\n    this.board.clearBoard();\n    this.pathCalculated = false;\n    this.animationsDisabled = false;\n  }\n\n  clearPath() {\n    if (this.calculating) return;\n    this.board.clearPath();\n    this.pathCalculated = false;\n    this.animationsDisabled = false;\n  }\n\n  toggleDiagonalEdges() {\n    this.board.diagonalEdges = !this.board.diagonalEdges;\n    if(this.pathCalculated)\n      this.visualize(this.algorithmDelay);\n  }\n\n  toggleAlgoritmsList() {\n    if (this.calculating) return;\n    this.algorithmsListShowed = !this.algorithmsListShowed;\n  }\n  \n  setActiveAlgorithm(index: number) {\n    this.activeAlgorithm = index;\n    \n    if (this.pathCalculated) {\n      this.algorithmsListShowed = !this.algorithmsListShowed;\n      this.visualize(this.algorithmDelay);\n    }\n  }\n\n  contextMenuDisable(event: MouseEvent) {\n    event.preventDefault();\n  }\n\n  onMouseDown(event: MouseEvent, node: Node) {\n    event.preventDefault();\n    if (this.calculating) return;\n    if(event.buttons == 1){\n      if(node == this.board.getInitalNode())\n        this.dragActive = 'initial'\n      else if(node == this.board.getDestinationNode())\n        this.dragActive = 'destination'\n      else if(node.type == 'open' && !this.pathCalculated) {\n        node.setWall();\n        this.dragActive = \"block\";\n      }\n    }   \n    else if(event.buttons == 2 && node.type == 'wall' && !this.pathCalculated) {\n      node.clearWall();\n      this.dragActive = 'clear';\n    }\n  }\n\n  onMouseMove(event: MouseEvent, node: Node) {\n    event.preventDefault();\n    if (this.calculating) return;\n    switch(this.dragActive) {\n      case 'false': break;\n\n      case 'initial': \n        if (node != this.board.getDestinationNode() && node.type != 'wall') {\n          if (node != this.board.getInitalNode()) {\n            this.board.setInitialNode(node.x, node.y);\n            if (this.pathCalculated)\n              this.visualize(0);\n          }\n        }\n        else\n          this.dragActive = 'false';\n        break;\n\n      case 'destination':\n        if (node != this.board.getInitalNode() && node.type != 'wall') {\n          if (node != this.board.getDestinationNode()) {\n            this.board.setDestinationNode(node.x, node.y);\n            if (this.pathCalculated)\n              this.visualize(0)\n          }\n        }\n        else\n          this.dragActive = 'false';\n        break;\n\n      case 'block':\n        if (event.buttons == 1 && node.type == 'open')\n          node.setWall();\n        break;\n        \n      case 'clear':\n        if (event.buttons == 2 && node.type == 'wall')\n          node.clearWall();\n        break;\n    }\n  }\n\n  onMouseUp(event: MouseEvent, node: Node) {\n    event.preventDefault();\n    if (this.dragActive != 'false'){\n      this.dragActive = 'false'\n    }\n\n  }\n\n  onMouseLeave() {\n    this.dragActive = 'false';\n  }\n\n\n}\n","<div class=\"bar\" id=\"nav-bar\">\n    <div (click)=\"toggleAlgoritmsList()\" class=\"btn board-btn alorithm-list-btn\">{{algorithms[activeAlgorithm]}}\n        <div class=\"algorithm-list\" *ngIf=\"algorithmsListShowed\">\n            <div class=\"algorithm-list-item\"(click)=\"setActiveAlgorithm(i)\" *ngFor=\"let algorithm of algorithms; index as i\">\n                {{algorithm}}\n            </div>          \n        </div>\n    </div>\n    <div (click)=\"visualize(this.algorithmDelay)\" class=\"btn board-btn\" id=\"run-btn\">Run Algorithm</div>\n    <div (click)=\"clearBoard()\" class=\"btn board-btn\">Clear Board</div>\n    <div (click)=\"clearPath()\" class=\"btn board-btn\">Clear Path</div>\n    <div class=\"checkbox\">\n        <input type=\"checkbox\" id=\"diagonal\" name=\"diagonal\" checked (click)=\"toggleDiagonalEdges()\">\n        <label for=\"diagonal\">Diagonal edges</label>\n    </div>\n</div>\n<div class=\"bar\" id=\"legend-bar\">\n    <div class=\"legend-element\"><div class=\"legend-tile legend-tile-open\"></div>Open</div>\n    <div class=\"legend-element\"><div class=\"legend-tile legend-tile-wall\"></div>Wall</div>\n    <div class=\"legend-element\"><div class=\"legend-tile legend-tile-checked\"></div>Checked</div>\n    <div class=\"legend-element\"><div class=\"legend-tile legend-tile-path\"></div>Path</div>\n    <div class=\"legend-element\">\n        <div class=\"legend-tile legend-tile-icons\">\n            <svg class=\"svg-node\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrow-right-circle\" viewBox=\"0 0 16 16\">\n            <path fill-rule=\"evenodd\" d=\"M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8zm15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM4.5 7.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H4.5z\"/>\n            </svg>\n        </div>\n        Initial Node\n    </div>\n    <div class=\"legend-element\">\n        <div class=\"legend-tile legend-tile-icons\">\n            <svg class=\"svg-node\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-stop-circle\" viewBox=\"0 0 16 16\">\n                <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n                <path d=\"M11 8a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\"/>\n            </svg>\n        </div>\n        Destination Node\n    </div>\n</div>\n\n<table (mouseleave)=\"onMouseLeave()\" (contextmenu)=\"contextMenuDisable($event)\">\n    <tr *ngFor=\"let row of board.nodes; index as y;\">\n        <td *ngFor=\"let node of row; index as x\">\n            <div class=\"node\" [@.disabled]=\"animationsDisabled\" [@nodeType]=\"node.type\"   \n            (mousedown)=\"onMouseDown($event, node)\" (mousemove)=\"onMouseMove($event, node)\" (mouseup)=\"onMouseUp($event, node)\">\n\n            <svg class=\"svg-node\" *ngIf=\"node.x == board.getInitalNode().x && node.y == board.getInitalNode().y\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrow-right-circle\" viewBox=\"0 0 16 16\">\n                <path fill-rule=\"evenodd\" d=\"M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8zm15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM4.5 7.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H4.5z\"/>\n            </svg>\n            <svg class=\"svg-node\" *ngIf=\"node.x == board.getDestinationNode().x && node.y == board.getDestinationNode().y\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-stop-circle\" viewBox=\"0 0 16 16\">\n                <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n                <path d=\"M11 8a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\"/>\n            </svg>\n\n            </div>\n        </td>\n    </tr>\n</table>\n\n<div class=\"bar\">\n    Right mouse button - place wall : Left mouse button - clear wall <br>\n    Initial and Destination nodes can be moved using right mouse button\n</div>\n","export class UtilityFunctions {\r\n    public static resolveWait(ms: number) {\r\n        return new Promise(resolve => {\r\n          setTimeout(() => {\r\n            resolve('resolved');\r\n          }, ms);\r\n        });\r\n      }\r\n}","import { Node } from \"./node\";\r\n\r\nexport class Board {\r\n    nodes: Node[][] = [];\r\n    diagonalEdges: boolean = true;\r\n    initialNodeCoords: {x: number, y:number};\r\n    destinationNodeCoords: {x: number, y:number};\r\n\r\n    constructor(public width: number, public height: number) {\r\n        for (let y = 0; y < this.height; y++) {\r\n            this.nodes[y] = [];\r\n            for (let x = 0; x < this.width; x++) {\r\n                this.nodes[y][x] = new Node(x, y);\r\n            }\r\n        }\r\n\r\n        this.initialNodeCoords = { x: Math.floor(Math.random() * width), y: Math.floor(Math.random() * height)};        \r\n        do {\r\n            this.destinationNodeCoords = { x: Math.floor(Math.random() * width), y: Math.floor(Math.random() * height)};\r\n        } while (this.initialNodeCoords.x == this.destinationNodeCoords.x && this.initialNodeCoords.y == this.destinationNodeCoords.y);\r\n\r\n        this.setInitialNode(this.initialNodeCoords.x, this.initialNodeCoords.y);\r\n        this.setDestinationNode(this.destinationNodeCoords.x, this.destinationNodeCoords.y);\r\n\r\n\r\n    }\r\n    \r\n    getNode(x: number, y: number): Node {\r\n        return this.nodes[y][x];\r\n    }\r\n\r\n    getNodeList(): Node[] {\r\n        let list: Node[] = new Array() \r\n        for (let y = 0; y < this.height; y++) \r\n            for (let x = 0; x < this.width; x++) \r\n                list.push(this.nodes[y][x]);\r\n        return list;\r\n    }\r\n\r\n    clearBoard(): void {\r\n        for (let y = 0; y < this.height; y++) \r\n            for (let x = 0; x < this.width; x++)\r\n                this.nodes[y][x].type = 'open';\r\n    }\r\n\r\n    clearPath(): void {\r\n        this.getNodeList().forEach(node => {\r\n            if(node.type == 'path' || node.type == 'checked')\r\n                node.type = 'open';\r\n        });\r\n    }\r\n\r\n    getInitalNode(): Node {\r\n        return this.getNode(this.initialNodeCoords.x, this.initialNodeCoords.y);\r\n    }\r\n\r\n    getDestinationNode(): Node {\r\n        return this.getNode(this.destinationNodeCoords.x, this.destinationNodeCoords.y);\r\n    }\r\n\r\n    setInitialNode(x: number, y: number) {\r\n        this.getNode(this.initialNodeCoords.x, this.initialNodeCoords.y).type = 'open';\r\n        this.initialNodeCoords = {x: x, y: y};\r\n    }\r\n\r\n    setDestinationNode(x: number, y: number) {\r\n        this.getNode(this.destinationNodeCoords.x, this.destinationNodeCoords.y).type = 'open';\r\n        this.destinationNodeCoords = {x: x, y: y};\r\n    }\r\n\r\n    getEdgeWeight(node1: Node, node2: Node): number {\r\n        if (node1.type == 'wall' || node2.type == 'wall') return 0;\r\n\r\n        let deltaX = node1.x - node2.x;\r\n        let deltaY = node1.y - node2.y;\r\n        \r\n        if (deltaX == 0 && (deltaY == -1 || deltaY == 1)) return 1;\r\n\r\n        if (deltaY == 0 && (deltaX == -1 || deltaX == 1)) return 1;\r\n\r\n        //right now if there are walls placed diagonally crossing the potential path algorithm still will go through \r\n        if (this.diagonalEdges && (deltaX == -1 || deltaX == 1) && (deltaY == -1 || deltaY == 1)) return 1.4142;\r\n\r\n        return 0;\r\n    }\r\n\r\n    \r\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'pathfinding-visualizer';\n}\n","<app-visualizer></app-visualizer>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { VisualizerModule } from './visualizer/visualizer.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    VisualizerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","class QElement {\r\n    constructor(public element: any, public priority: number) {}\r\n}\r\n\r\nexport class PriorityQueue {\r\n    items: QElement[] = [];\r\n    constructor() {\r\n        this.items = [];\r\n    }\r\n\r\n    add(element: any, priority: number): void {\r\n        let qElement = new QElement(element, priority);\r\n        let highset = true;\r\n\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            if (this.items[i].priority > qElement.priority) {\r\n                this.items.splice(i, 0, qElement);\r\n                highset = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (highset) this.items.push(qElement);\r\n    }\r\n\r\n    dequeue(): any {\r\n        if(this.isEmpty())\r\n            return \"No elements in Queue\";\r\n        return this.items.shift()?.element;\r\n    }\r\n\r\n    remove(element: any): void {\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            if (this.items[i].element == element) {\r\n                this.items.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    first() {\r\n        if(this.isEmpty())\r\n            return \"No elements in Queue\";\r\n        return this.items[0].element;\r\n    }\r\n\r\n    last() {\r\n        if(this.isEmpty())\r\n            return \"No elements in Queue\";\r\n        return this.items[this.items.length - 1].element;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.items.length == 0;\r\n    }\r\n\r\n    contains(element: any): boolean {\r\n        for(let i = 0; i < this.items.length; i++)\r\n            if (this.items[i].element == element)\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-visualizer',\n  templateUrl: './visualizer.component.html',\n  styleUrls: ['./visualizer.component.scss']\n})\nexport class VisualizerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-board></app-board>","export class Node {\r\n    type: 'open'| 'checked' | 'path' | 'wall' = 'open';\r\n\r\n    constructor(public x: number, public y: number) {\r\n\r\n    }\r\n\r\n    setWall() {\r\n        if (this.type == 'open')\r\n            this.type = 'wall';\r\n    }\r\n\r\n    clearWall() {\r\n        if (this.type == 'wall')\r\n        this.type = 'open';\r\n    }\r\n}","import { style, animate, trigger, transition, state, keyframes, AUTO_STYLE } from '@angular/animations';\r\n\r\nexport const BoardAnimations = {\r\n  nodeType: trigger('nodeType', [\r\n    state('open', style({\r\n        backgroundColor: 'hsl(222, 37%, 88%)'\r\n    })),\r\n    state('checked', style({\r\n        backgroundColor: 'hsl(197, 75%, 60%)'\r\n    })),\r\n    state('path', style({\r\n        backgroundColor: 'hsl(64, 92%, 63%)',\r\n        border: 'none'\r\n    })),\r\n    state('wall', style({\r\n        backgroundColor: 'hsl(216, 79%, 19%)',\r\n        border: 'none'\r\n    })),\r\n\r\n    transition('open => checked', [\r\n      animate(700, keyframes([\r\n        style({ \r\n          borderRadius: '50%',\r\n          height: '50%',\r\n          width: '50%',\r\n          margin: 'auto',\r\n          backgroundColor: 'hsl(197, 90%, 45%)',\r\n          offset: 0\r\n        }),\r\n        style({ \r\n          borderRadius: '40%',\r\n          height: '60%',\r\n          width: '60%',\r\n          margin: 'auto',\r\n          backgroundColor: 'hsl(197, 87%, 48%)',\r\n          offset: 0.3\r\n        }),\r\n        style({ \r\n          borderRadius: '30%',\r\n          height: '70%',\r\n          width: '70%',\r\n          margin: 'auto',\r\n          backgroundColor: 'hsl(197, 84%, 51%)',\r\n          offset: 0.55\r\n        }),\r\n        style({ \r\n          borderRadius: '20%',\r\n          height: '80%',\r\n          width: '80%',\r\n          margin: 'auto',\r\n          backgroundColor: 'hsl(197, 81%, 54%)',\r\n          offset: 0.75\r\n        }),\r\n        style({ \r\n          borderRadius: '10%',\r\n          height: '90%',\r\n          width: '90%',\r\n          margin: 'auto',\r\n          backgroundColor: 'hsl(197, 77%, 57%)',\r\n          offset: 0.9\r\n        }),\r\n        style({ \r\n          borderRadius: '0%',\r\n          height: '100%',\r\n          width: '100%',\r\n          margin: 'auto',\r\n          backgroundColor: 'hsl(197, 75%, 60%)',\r\n          offset: 1\r\n        })\r\n      ]))\r\n    ]),\r\n    transition('checked => path', [\r\n      animate(700)\r\n    ]),\r\n    transition('open <=> wall', [\r\n      animate(100)\r\n    ]),\r\n    transition('* => *', [\r\n      animate(0)\r\n    ]),\r\n  ]),    \r\n};","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BoardComponent } from './components/board/board.component';\nimport { VisualizerComponent } from './visualizer.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\n@NgModule({\n  declarations: [\n    BoardComponent,\n    VisualizerComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule\n  ],\n  exports: [\n    VisualizerComponent\n  ]\n})\nexport class VisualizerModule { }\n","import { Board } from \"../../board\";\r\nimport { Node } from \"../../node\";\r\nimport { PriorityQueue } from \"../../utility/PriorityQueue\";\r\nimport { UtilityFunctions } from \"../../utility/UtilityFunctions\";\r\n\r\nexport class AStar {\r\n    private static NO_PARENT: number = -1;\r\n\r\n    public static async calculatePath(board: Board, delay: number): Promise<any> {\r\n        let sourceIndex = board.getNodeList().indexOf(board.getInitalNode());\r\n        let targetIndex = board.getNodeList().indexOf(board.getDestinationNode());\r\n        let nodes = board.getNodeList();\r\n\r\n        let openSet = new PriorityQueue();\r\n\r\n        let parents: number[] = new Array(nodes.length);\r\n        parents[sourceIndex] = AStar.NO_PARENT;\r\n\r\n        let gScore: number[] = new Array(nodes.length);\r\n        let fScore: number[] = new Array(nodes.length);\r\n        for (let i = 0; i < nodes.length; i++) {\r\n            gScore[i] = Number.POSITIVE_INFINITY;\r\n            fScore[i] = Number.POSITIVE_INFINITY;\r\n        }\r\n        gScore[sourceIndex] = 0;\r\n        fScore[sourceIndex] = AStar.calculateH(nodes[sourceIndex], nodes[targetIndex]);\r\n\r\n        openSet.add(sourceIndex, fScore[sourceIndex]);\r\n        nodes[sourceIndex].type = 'checked';\r\n\r\n        while(!openSet.isEmpty()) {\r\n            let current = openSet.dequeue();\r\n            if (current == targetIndex) {\r\n                if (delay == 0) {\r\n                    AStar.setPath(nodes, sourceIndex, targetIndex, parents, delay);\r\n                    return  new Promise(resolve => resolve(fScore[current]));\r\n                }\r\n                else {\r\n                    await AStar.setPath(nodes, sourceIndex, targetIndex, parents, delay*5);\r\n                    return  new Promise(resolve => resolve(fScore[current]));     \r\n                }     \r\n            }\r\n            nodes.forEach(async node => {\r\n                let edgeWeight: number = board.getEdgeWeight(nodes[current], node);\r\n                if (edgeWeight != 0) {\r\n                    let neighbour = nodes.indexOf(node);\r\n                    let tentativeG = gScore[current] + edgeWeight;\r\n                    if (tentativeG < gScore[neighbour]) {\r\n                        parents[neighbour] = current;\r\n                        gScore[neighbour] = tentativeG;\r\n                        fScore[neighbour] = gScore[neighbour] + AStar.calculateH(nodes[neighbour], nodes[targetIndex]);\r\n                        if (!openSet.contains(neighbour)){\r\n                            openSet.add(neighbour, fScore[neighbour]);\r\n                            if (delay == 0)\r\n                                nodes[neighbour].type = 'checked'\r\n                            else\r\n                                await AStar.checkNode(nodes[neighbour], delay);\r\n                        }\r\n                        else {\r\n                            openSet.remove(neighbour);\r\n                            openSet.add(neighbour, fScore[neighbour]);\r\n                        }\r\n                    }             \r\n                }      \r\n            });\r\n        }\r\n\r\n        return new Promise(resolve => resolve(0));\r\n    }\r\n\r\n    private static calculateH(node1: Node, node2: Node): number {\r\n        return Math.sqrt(Math.pow((node1.x - node2.x),2) + Math.pow((node1.y - node2.y),2));\r\n    }\r\n\r\n    private static async setPath(nodes: Node[], sourceIndex: number, targetIndex: number, parents: number[], delay: number): Promise<Node[]> {\r\n        let list: Node[] = new Array();\r\n        let newIndex = targetIndex;\r\n        while(parents[newIndex] != AStar.NO_PARENT) {\r\n            list.push(nodes[newIndex]);\r\n            newIndex = parents[newIndex];\r\n        }\r\n\r\n        list.push(nodes[sourceIndex]);\r\n        list = list.reverse();\r\n        if (delay == 0) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                list[i].type = 'path';\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < list.length; i++) {\r\n                const result = await UtilityFunctions.resolveWait(delay);\r\n                if (result == 'resolved')\r\n                    list[i].type = 'path';\r\n            }\r\n        }\r\n\r\n        return await list;\r\n    }\r\n\r\n    private static async checkNode(node: Node, delay: number) {\r\n        return new Promise(async resolve => {\r\n            const result = await UtilityFunctions.resolveWait(delay);\r\n            if (result == 'resolved')\r\n                node.type = 'checked';\r\n                resolve('resolved')\r\n        });\r\n    }\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}